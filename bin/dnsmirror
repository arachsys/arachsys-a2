#!/bin/perl -w

use File::Basename;
use File::Copy;
use File::Temp qw(tempfile);
use strict;

$ENV{ROOT} ||= '/etc/tinydns';
$ENV{CHECK} ||= 60;
$ENV{TTL_NS} ||= 10800;
$ENV{TTL_POSITIVE} ||= 3600;
$ENV{TTL_NEGATIVE} ||= 120;

my $hostname = `hostname -s`;
chomp $hostname;

my $localdata = 'data.local';
my $remotedata = "$ENV{ROOT}/data.$hostname";
my $cdbfile = "$ENV{ROOT}/data.cdb";

my (@peerhosts, @slavehosts);

foreach (@ARGV) {
  if (/^slave:(.*)$/) {
    push @slavehosts, $1;
  } elsif (/^peer:(.*)$/) {
    push @peerhosts, $1;
  } else {
    push @peerhosts, $_;
  }
}

my $updatetime = 0;

die "unable to change to directory $ENV{ROOT}\n" unless chdir $ENV{ROOT};

while (1) {
  my $maxmtime = 0;
  opendir DIR, '.';
  while (defined (my $file = readdir DIR)) {
    next unless $file =~ /^data\./ and $file !~ /\.(cdb|tmp)$/;
    my $mtime = (stat $file)[9];
    if ($file eq $localdata and $mtime > $updatetime) {
      foreach my $peerhost (@peerhosts) {
        print STDERR "mirroring $localdata to $peerhost:$remotedata\n";
        system "rsync", "-qz", $localdata, "$peerhost:$remotedata";
      }
    }
    $maxmtime = $mtime if $mtime > $maxmtime;
  }

  if ($maxmtime > $updatetime) {
    print STDERR "regenerating CDB file from data files\n";
    opendir DIR, '.';
    my ($data, $tmpname) = tempfile 'tmp.XXXXXX';
    while (defined (my $file = readdir DIR)) {
      next unless $file =~ /^data\./ and $file !~ /\.(cdb|tmp)$/;
      copy $file, $data;
    }
    closedir DIR;
    rename $tmpname, 'data';
    system 'tinydns-data';
    foreach my $slavehost (@slavehosts) {
      print STDERR "mirroring CDB file to $slavehost:$cdbfile\n";
      system "rsync", "-qz", $cdbfile, "$slavehost:$cdbfile";
    }
    $updatetime = $maxmtime;
  }

  sleep $ENV{CHECK};
}
