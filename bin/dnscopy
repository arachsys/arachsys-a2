#!/bin/perl -w

use Arachsys::A2 qw(checkdomain checkdomainuser checkprivilege);
use File::Basename;
use strict;

my $privileged = checkprivilege;
$0 = basename $0;

sub check($) {
  my $domain = lc shift;
  unless (checkdomain $domain) {
    die "Domain $domain is invalid\n";
  }
  unless ($privileged or checkdomainuser $domain) {
    die "Domain $domain does not belong to you\n";
  }
  return $domain;
}

sub usage() {
  print STDERR <<EOF;
Usage:  $0 SRCDOMAIN DSTDOMAIN
Copy DNS records verbatim from domain SRCDOMAIN to domain DSTDOMAIN.
EOF
  exit 1;
}

$SIG{__DIE__} = sub { die "$0: $_[0]"; };
$SIG{__WARN__} = sub { warn "$0: $_[0]"; };
$SIG{INT} = $SIG{TERM} = sub { exit 1; };

usage unless @ARGV == 2;

my $srcdom = check $ARGV[0];
my $dstdom = check $ARGV[1];

open SRC, "dnsconfig -rs $srcdom |" or die;
open DST, "| dnsconfig -ws $dstdom" or die;

while (<SRC>) {
  next if /^%/;
  s/^(.)([^:]*\.|)\Q$srcdom\E\.*(:|$)/$1$2$dstdom$3/io;
  s/^([.&\@SZ][^:]*:[^:]*:)([^:]*\.|)\Q$srcdom\E\.*(:|$)/$1$2$dstdom$3/o
    if /^[.&\@SZ][^:]*:[^:]*:[^:]*\./;
  s/^([CZ][^:]*:)([^:]*\.|)\Q$srcdom\E\.*(:|$)/$1$2$dstdom$3/o
    if /^[CZ][^:]*:[^:]*\./;
  s/^(N(?:[^:]*:){6})([^:]*\.|)\Q$srcdom\E\.*(:|$)/$1$2$dstdom$3/o
    if /^N(?:[^:]*:){6}[^:]*\./;
  print DST $_;
}

close SRC;
close DST;
